name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
      - run: npm run format:check
      - run: npm run lint

  test-version:
    name: test version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        SF_VERSION:
          - 2.33.3
          - 2.34.7
          - latest
    steps:
      - uses: actions/checkout@v4
      - name: run 'sopra-steria-salesforce/sf-cli-setup' locally
        uses: ./
        with:
          sf-cli-version: ${{ matrix.SF_VERSION }}
          use-cache: false

      - run: echo "INSTALLED_VERSION=$(sf --version)" >> $GITHUB_ENV
      - name: '[TEST] sf version is correct (actual: ${{ env.INSTALLED_VERSION }}, expected: ${{ matrix.SF_VERSION }})'
        if: matrix.TO_INSTALL_VERSION != 'latest' && contains(env.INSTALLED_VERSION, matrix.TO_INSTALL_VERSION) == false
        run: exit 1

  test-caching-job-1:
    name: test caching (job 1)
    runs-on: ubuntu-latest
    env:
      SF_VERSION: 2.28.6
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v4
      - run: gh api --method DELETE /repositories/${{ github.repository_id }}/actions/caches?key=salesforce/cli@v${{ env.SF_VERSION }}-Linux-x64 || true # ignore any errors, the cache could be deleted be itself
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: run 'sopra-steria-salesforce/sf-cli-setup' locally
        uses: ./
        id: setup
        with:
          sf-cli-version: ${{ env.SF_VERSION }}
          use-cache: true

      - name: '[TEST] sf command is ready'
        run: sf --version
      - run: echo "INSTALLED_VERSION=$(sf --version)" >> $GITHUB_ENV
      - name: '[TEST] sf version is correct (actual: ${{ env.INSTALLED_VERSION }}, expected: ${{ env.SF_VERSION }})'
        if: contains(env.INSTALLED_VERSION, env.SF_VERSION) == false
        run: exit 1
      - name: '[TEST] sf output is ready'
        if: contains(steps.setup.outputs.ready, 'true') == false
        run: exit 1
      - name: '[TEST] installed from npm'
        if: contains(steps.setup.outputs.installed-from, 'npm') == false
        run: exit 1

      - name: run 'sopra-steria-salesforce/sf-cli-setup' locally
        uses: ./
        id: setup-2
        with:
          sf-cli-version: ${{ env.SF_VERSION }}
          use-cache: true

      - name: '[TEST] sf command is ready'
        run: sf --version
      - run: echo "INSTALLED_VERSION=$(sf --version)" >> $GITHUB_ENV
      - name: '[TEST] sf version is correct (actual: ${{ env.INSTALLED_VERSION }}, expected: ${{ env.SF_VERSION }})'
        if: contains(env.INSTALLED_VERSION, env.SF_VERSION) == false
        run: exit 1
      - name: '[TEST] sf output is ready'
        if: contains(steps.setup-2.outputs.ready, 'true') == false
        run: exit 1
      - name: '[TEST] already installed'
        if: contains(steps.setup-2.outputs.installed-from, 'already-installed') == false
        run: exit 1

  test-caching-job-2:
    name: test caching
    runs-on: ubuntu-latest
    needs: test-caching-job-1
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v4
      - name: run 'sopra-steria-salesforce/sf-cli-setup' locally
        uses: ./
        id: setup
        with:
          sf-cli-version: ${{ env.SF_VERSION }}
          use-cache: true

      - name: '[TEST] sf command is ready'
        run: sf --version
      - run: echo "INSTALLED_VERSION=$(sf --version)" >> $GITHUB_ENV
      - name: '[TEST] sf version is correct (actual: ${{ env.INSTALLED_VERSION }}, expected: ${{ env.SF_VERSION }})'
        if: contains(env.INSTALLED_VERSION, env.SF_VERSION) == false
        run: exit 1
      - name: '[TEST] sf output is ready'
        if: contains(steps.setup.outputs.ready, 'true') == false
        run: exit 1
      - name: '[TEST] installed from cache'
        if: contains(steps.setup.outputs.installed-from, 'cache') == false
        run: exit 1
