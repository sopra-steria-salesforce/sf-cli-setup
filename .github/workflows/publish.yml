name: 'Publish GitHub Action'
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'dist/**'
env:
  VERSION_TEXT: Incrementing npm package version to
  GET_CURRENT_TAG: npm pkg get version | tr -d '\"'
jobs:
  create-tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: tgymnich/publish-github-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: create-tags
    steps:
      - uses: actions/checkout@v4
      - name: Find Previous Tag
        run: |
          tag=$(gh api /repositories/${{ github.repository_id }}/releases --jq '.[1].tag_name') && echo "PREVIOUS_TAG=$tag" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Current Tag
        run: |
          echo "CURRENT_TAG=v$(${{ env.GET_CURRENT_TAG }})" >> $GITHUB_ENV
      - name: Set First Minor Tag
        run: |
          echo "FIRST_MINOR_TAG=v$(${{ env.GET_CURRENT_TAG }} | sed -E 's/([0-9]+\.[0-9]+)\.[0-9]+/\1.0/')" >> $GITHUB_ENV
      - name: Build Delta Changelog
        uses: mikepenz/release-changelog-builder-action@v5
        id: delta_changelog
        with:
          configuration: .github/changelog/delta_changelog.json
          fromTag: ${{ env.PREVIOUS_TAG }}
          toTag: ${{ env.CURRENT_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Full Changelog
        if: ${{ env.FIRST_MINOR_TAG != env.CURRENT_TAG }}
        uses: mikepenz/release-changelog-builder-action@v5
        id: full_changelog
        with:
          configuration: .github/changelog/full_changelog.json
          fromTag: ${{ env.FIRST_MINOR_TAG }}
          toTag: ${{ env.CURRENT_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release (x.x.x)
        if: ${{ env.FIRST_MINOR_TAG != env.CURRENT_TAG }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          name: ${{ env.CURRENT_TAG }}
          tag: ${{ env.CURRENT_TAG }}
          removeArtifacts: true
          body: |
            ${{ steps.delta_changelog.outputs.changelog }}

            <details><summary><h2>Changes Since ${{ env.FIRST_MINOR_TAG }}</h2></summary><p>

            ${{ steps.full_changelog.outputs.changelog }}
            </p></details>
      - name: Create Release (x.x.0)
        if: ${{ env.FIRST_MINOR_TAG == env.CURRENT_TAG }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          name: ${{ env.CURRENT_TAG }}
          tag: ${{ env.CURRENT_TAG }}
          removeArtifacts: true
          body: |
            ${{ steps.delta_changelog.outputs.changelog }}

  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: fregante/setup-git-user@v2
      - run: npm version patch --no-git-tag-version
      - run: git add package.json package-lock.json
      - run: echo "VERSION=$(${{ env.GET_CURRENT_TAG }})" >> $GITHUB_ENV
      - run: git commit -m '${{ env.VERSION_TEXT }} ${{ env.VERSION }}'
      - run: echo '::notice::${{ env.VERSION_TEXT }} ${{ env.VERSION }}'
      - run: git push origin HEAD:${{ github.ref_name }}
